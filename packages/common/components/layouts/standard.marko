import { get } from "@parameter1/base-cms-object-path";
import { parseBooleanHeader } from "@parameter1/base-cms-utils";
import queryFragment from "@ascend-media/package-common/graphql/fragments/content-list";

$ const { website, config, req } = out.global;
$ const { 'sec-ch-ua-platform': operatingSystem } = get(req, "headers");
$ const platformDesignator = operatingSystem.match(/iOS|Android/i) ? 'm' : 'd';
$ const { newsletter, date } = input.data;

$ const emailX = config.get("emailX");
$ const nativeX = config.getAsObject("nativeX");

<marko-newsletter-root
  title=newsletter.name
  description=newsletter.description
  date=date
>
  <@head>
    <common-head-block />
  </@head>
  <@body style="padding:0; margin:0;font-family: 'Roboto', Arial, sans-serif; -webkit-text-size-adjust:100%;">
    <common-body-wrapper-block newsletter=newsletter date=date footer=input.footer>
      <@body>

        <!-- Ad Slot 1 -->
        <common-ad-emailx-block
          newsletter=newsletter
          ad-unit=emailX.getAdUnit({ name: 'ad-slot-1', alias: newsletter.alias })
          date=date
          link-label-props={ adLocation: 1, platformDesignator }
        />

        <!-- Content list block -->
        <common-content-list-block
          date=date
          section-name="Main"
          newsletter=newsletter
          limit=1
          skip=0
          storyLocation=1
        />

        <!-- Advertisement / Promotion block -->
        <common-ad-wrapper-block
          date=date
          newsletter=newsletter
          promotion-component="advertisement-block"
          placement-id=get(nativeX, `placements.${newsletter.alias}.native-slot-1`)
          link-label-props={ adLocation: 2, platformDesignator }
        />

        <!-- Content list block -->
        <common-content-list-block
          date=date
          section-name="Main"
          newsletter=newsletter
          limit=1
          skip=1
          storyLocation=2
        />

        <!-- Ad Slot 2 -->
        <common-ad-emailx-block
          newsletter=newsletter
          ad-unit=emailX.getAdUnit({ name: 'ad-slot-2', alias: newsletter.alias })
          date=date
          link-label-props={ adLocation: 3, platformDesignator }
        />

        <!-- Content list block -->
        <common-content-list-block
          date=date
          section-name="Main"
          newsletter=newsletter
          limit=1
          skip=2
          storyLocation=3
        />

        <!-- Ad Slot 3 -->
        <common-ad-emailx-block
          newsletter=newsletter
          ad-unit=emailX.getAdUnit({ name: 'ad-slot-3', alias: newsletter.alias })
          date=date
          link-label-props={ adLocation: 4, platformDesignator }
        />

        <!-- Content list block -->
        <common-content-list-block
          date=date
          section-name="Main"
          newsletter=newsletter
          limit=1
          skip=3
          storyLocation=4
        />

        <!-- Ad Slot 4 -->
        <common-ad-emailx-block
          newsletter=newsletter
          ad-unit=emailX.getAdUnit({ name: 'ad-slot-4', alias: newsletter.alias })
          date=date
          link-label-props={ adLocation: 5, platformDesignator }
        />

        <!-- Content list block -->
        <common-content-list-block
          date=date
          section-name="Main"
          newsletter=newsletter
          limit=1
          skip=4
          storyLocation=5
        />

        <!-- Ad Slot 5 -->
        <common-ad-emailx-block
          newsletter=newsletter
          ad-unit=emailX.getAdUnit({ name: 'ad-slot-5', alias: newsletter.alias })
          date=date
          link-label-props={ adLocation: 6, platformDesignator }
        />

        <!-- Content list block -->
        <common-content-list-block
          date=date
          section-name="Main"
          newsletter=newsletter
          limit=1
          skip=5
          storyLocation=6
        />

        <!-- Ad Slot 6 -->
        <common-ad-emailx-block
          newsletter=newsletter
          ad-unit=emailX.getAdUnit({ name: 'ad-slot-6', alias: newsletter.alias })
          date=date
          link-label-props={ adLocation: 7, platformDesignator }
        />

        <!-- Content list block -->
        <common-content-list-block
          date=date
          section-name="Main"
          newsletter=newsletter
          limit=1
          skip=6
          storyLocation=7
        />

        <!-- Ad Slot 7 -->
        <common-ad-emailx-block
          newsletter=newsletter
          ad-unit=emailX.getAdUnit({ name: 'ad-slot-7', alias: newsletter.alias })
          date=date
          link-label-props={ adLocation: 8, platformDesignator }
        />

         <!-- Content list block -->
        <common-content-list-block
          date=date
          section-name="Main"
          newsletter=newsletter
          limit=3
          skip=7
          storyLocation=8
        />

        <!-- Channels -->
        <common-channel-buttons-block newsletter=newsletter />

        <script>
          const allAnchors = document.getElementsByTagName('a');
          const storyLabels = [];
          const adLabels = [];
          Object.keys(allAnchors).forEach((anchor) => {
            const currentLinkLabel = allAnchors[anchor].getAttribute('linklabel');
            if (currentLinkLabel) {
              if (currentLinkLabel.match(/^story/)) {
                storyLabels.push(currentLinkLabel);
              } else if (currentLinkLabel.match(/^ad/)) {
                adLabels.push(currentLinkLabel);
              }
            }
          })
          const labelMap = [];
          adLabels.forEach((label, index) => {
            labelMap.push({ was: adLabels[index], is: adLabels[index].replace(/[0-9]+/, index + 1) })
          });
          storyLabels.forEach((label, index) => {
             labelMap.push({ was: storyLabels[index], is: storyLabels[index].replace(/[0-9]+/, index + 1) })
          });
          Object.keys(allAnchors).forEach((anchor) => {
            const currentLinkLabel = allAnchors[anchor].getAttribute('linklabel');
            if (currentLinkLabel) {
              const foundLabel = labelMap.find((pair) => pair.was === currentLinkLabel);
              if (foundLabel) {
                allAnchors[anchor].setAttribute('linklabel', foundLabel.is);
              }
            }
          });
        </script>
      </@body>
    </common-body-wrapper-block>
  </@body>
</marko-newsletter-root>
